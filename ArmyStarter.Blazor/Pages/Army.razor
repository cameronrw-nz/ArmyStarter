@page "/army/{ArmyId}"
@inject HttpClient Http
@using ArmyStarter.Blazor.Models;

<h1>Army Unit</h1>


@if (armyUnits == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Cost (THB)</th>
                <th>Points</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var armyUnit in armyUnits)
            {
                <tr @onclick="@(e => SelectArmy(armyUnit))">
                    <td>@armyUnit.Name</td>
                    <td>@armyUnit.Cost</td>
                    <td>@armyUnit.PointsValue</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (selectedArmyUnit != null)
{
    <div>
        <div>Name: @selectedArmyUnit.Name</div>
        <div>Link: <a href="@selectedArmyUnit.Link">@selectedArmyUnit.Link</a></div>
        <div>Cost: @selectedArmyUnit.Cost</div>
        <div>Pts:  @selectedArmyUnit.PointsValue</div>
    </div>
}

@code {
    [Parameter]
    public string ArmyId { get; set; }

    ArmyUnit[] armyUnits;

    ArmyUnit selectedArmyUnit { get; set; }

    void SelectArmy(ArmyUnit armyUnit)
    {
        selectedArmyUnit = armyUnit;
    }

    protected override async Task OnInitAsync()
    {
        string armyUnitUrlString = $"{Constants.ArmyUnitsController}/armyId={ArmyId}";
        armyUnits = await Http.GetJsonAsync<ArmyUnit[]>(armyUnitUrlString);
    }

    protected override async Task OnParametersSetAsync()
    {
        string armyUnitUrlString = $"{Constants.ArmyUnitsController}/armyId={ArmyId}";
        armyUnits = await Http.GetJsonAsync<ArmyUnit[]>(armyUnitUrlString);
    }
}
