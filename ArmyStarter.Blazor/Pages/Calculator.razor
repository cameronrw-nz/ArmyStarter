@page "/calculator"
@inject HttpClient Http
@using ArmyStarter.Models;
@using ArmyStarter.Blazor.Display;

<h1>Calculator</h1>

<div>
    <form>
        <div class="form-group">
            <dt>Army:</dt>
            <Selector @bind-value="@SelectedArmyId">
                <option value="">Please Choose An Option...</option>
                @foreach (var army in Armies)
                {
                    <option value="@army.ArmyId">
                        @army.Name
                    </option>
                }
            </Selector>
        </div>
        <div class="form-group">
            <dt>Unit:</dt>
            <Selector @bind-value="@SelectedUnitId">
                <option value="">Please Choose An Option...</option>
                @foreach (var unit in SelectedArmy?.AvailableUnits ?? new Unit[0])
                {
                    <option value="@unit.UnitId">
                        @unit.Name
                    </option>
                }
            </Selector>
        </div>

    </form>

    @if (SelectedUnit != null)
    {
        <Calculations AttackingUnit="@SelectedUnit" ModelDisplays="@ModelDisplays" />
    }
</div>

@code {
    ArmyStarter.Models.Army[] Armies { get; set; } = new ArmyStarter.Models.Army[0];
    Unit[] Units { get; set; }

    ArmyStarter.Models.Army SelectedArmy { get; set; }

    Unit SelectedUnit { get; set; }

    protected override async Task OnInitAsync()
    {
        Armies = await Http.GetJsonAsync<ArmyStarter.Models.Army[]>(Constants.ArmiesController);
        Console.WriteLine(Armies[0].Name);
    }

    private string _selectedArmyId;
    string SelectedArmyId
    {
        get => _selectedArmyId;
        set
        {
            _selectedArmyId = value;
            var selectedArmyIdGuid = new Guid(value);
            SelectedArmy = Armies.FirstOrDefault(army => army.ArmyId == selectedArmyIdGuid);
            Console.WriteLine(_selectedArmyId);
        }
    }

    private string _selectedUnitId;
    string SelectedUnitId
    {
        get => _selectedUnitId;
        set
        {
            _selectedUnitId = value;
            var selectedUnitIdGuid = new Guid(value);
            SelectedUnit = SelectedArmy.AvailableUnits.FirstOrDefault(army => army.UnitId == selectedUnitIdGuid);
            ModelDisplays = SelectedUnit.Models.Select(model => new ModelDisplay(model)).ToArray();
        }
    }

    ModelDisplay[] ModelDisplays { get; set; }
}
