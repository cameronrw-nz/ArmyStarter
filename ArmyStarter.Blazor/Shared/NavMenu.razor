@inject HttpClient Http
@using ArmyStarter.Blazor.Models;

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">ArmyStarter.Blazor</a>
    <button class="navbar-toggler" @onclick="@ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="@ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
    </ul>
</div>

@if (armies == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="@NavMenuCssClass" @onclick="@ToggleNavMenu">
        <ul class="nav flex-column">
            @foreach (var army in armies)
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"army/{army.ArmyId}")" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> @army.Name
                    </NavLink>
                </li>
            }
        </ul>
    </div>
}

@code {
    Army[] armies;

    protected override async Task OnInitAsync()
    { 
        armies = await Http.GetJsonAsync<Army[]>("http://localhost:90/api/army");
    }

    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}

