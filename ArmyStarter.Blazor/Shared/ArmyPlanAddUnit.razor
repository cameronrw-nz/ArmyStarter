@using ArmyStarter.Models;
@inject HttpClient Http

@if (IsAddingUnit)
{
    <ArmyUnitSelector UnitChanged="@SelectUnit" />
    <button class="oi oi-check align-bottom btn btn-primary" @onclick="@AddUnit">Ok</button>
}
else
{
    <div class="d-flex">
        <button class="oi oi-plus align-bottom btn btn-primary" @onclick="@Toggle">Add</button>
    </div>
}

@code {
    [Parameter]
    PlanArmy PlanArmy { get; set; }

    bool IsAddingUnit { get; set; }

    [Parameter] private EventCallback<PlanArmy> PlanArmyChanged { get; set; }

    void Toggle()
    {
        IsAddingUnit = !IsAddingUnit;
    }

    Unit SelectedUnit { get; set; }

    void SelectUnit(Unit unit)
    {
        SelectedUnit = unit;
    }

    void AddUnit()
    {
        var newUnit = new PlanUnit() { Unit = SelectedUnit };
        newUnit.SelectedModels = new List<PlanModel>();
        foreach (var model in SelectedUnit.Models)
        {
            if (model.DefaultModelsPerUnit > 0)
            {
                newUnit.SelectedModels.Add(new PlanModel() { Model = model, NumberOfModels = model.DefaultModelsPerUnit });
            }
        }
        PlanArmy.PlanUnits.Add(newUnit);
        SelectedUnit = null;
        IsAddingUnit = false;
        UpdatePlanArmy();
    }

    private async Task UpdatePlanArmy()
    {
        await PlanArmyChanged.InvokeAsync(PlanArmy);
    }
}
