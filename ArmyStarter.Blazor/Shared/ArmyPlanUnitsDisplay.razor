@using ArmyStarter.Models;
@inject HttpClient Http

@foreach (var rosterToUnit in RosterToUnits.Where(a => a.Value.Count() != 0))
{
    <div>
        <h3>@rosterToUnit.Key.ToString()</h3>
    </div>
    @foreach (PlanUnit unit in rosterToUnit.Value)
    {
        <div>
            @unit.Unit.Name
            @unit.Unit.RosterPosition.RosterPositionEnum
        </div>
    }
}


@code {
    [Parameter]
    PlanArmy PlanArmy { get; set; }

    [Parameter]
    EventCallback<PlanArmy> PlanArmyChanged { get; set; }

    bool IsAddingUnit { get; set; }

    Unit SelectedUnit { get; set; }

    Dictionary<RosterPositionType, IEnumerable<PlanUnit>> RosterToUnits { get; set; }

    protected override void OnParametersSet()
    {
        SetRosterDictionary();
    }

    void SetRosterDictionary()
    {
        RosterToUnits = new Dictionary<RosterPositionType, IEnumerable<PlanUnit>>();
        foreach (RosterPositionType type in (RosterPositionType[])Enum.GetValues(typeof(RosterPositionType)))
        {
            IEnumerable<PlanUnit> units = PlanArmy.PlanUnits.Where(u => u.Unit.RosterPosition.RosterPositionEnum == type);
            RosterToUnits.Add(type, units);
        }
    }
}
