@using ArmyStarter.Models;

<div class="d-flex justify-content-between">
    <div class="header">
        <h1>
            @Header
        </h1>
        <span class="oi oi-pencil" @onclick="@ToggleEditPlanArmyInfo" />
    </div>
    <div class="header">
        <h2>
            Points:
            @ArmyPoints /
            @if (!IsEditingPoints)
            {
                @PlanArmy.PointsLimit
            }
        </h2>
        @if (IsEditingPoints)
        {
            <input class="input" @bind="@PlanArmy.PointsLimit" />
        }
        <span class="oi oi-pencil" @onclick="@TogglePoints" />
    </div>
</div>

@if (PlanArmy.Description != null)
{
    <p>@PlanArmy.Description</p>
}

@if (IsEditingPlanArmyInfo)
{
    <ArmyPlanEditingSection @bind-PlanArmy="@PlanArmy" />
}

<ArmyPlanAddUnit @bind-PlanArmy="@PlanArmy" />

<ArmyPlanUnitsDisplay @bind-PlanArmy="@PlanArmy" />

@code {
    [Parameter]
    PlanArmy PlanArmy { get; set; }

    [Parameter]
    PlanUnit[] armyUnits { get; set; }

    PlanUnit selectedArmyUnit { get; set; }

    bool IsEditingPlanArmyInfo { get; set; } = true;

    bool IsEditingPoints { get; set; } = true;

    int ArmyPoints => PlanArmy.PlanUnits.Sum(unit => unit.SelectedModels.Sum(model => model.Model.PointsValue * model.NumberOfModels + model.PlanModelWeapons.Sum(weapon => weapon.Quantity * model.Model.Weapons.First(w => w.WeaponId == weapon.WeaponId).PointsValue)));

    string Header => PlanArmy.Name ?? "Create Army Plan";

    void SelectArmy(PlanUnit armyUnit)
    {
        selectedArmyUnit = armyUnit;
    }

    void ToggleEditPlanArmyInfo()
    {
        IsEditingPlanArmyInfo = !IsEditingPlanArmyInfo;
    }

    void TogglePoints()
    {
        IsEditingPoints = !IsEditingPoints;
    }
}
