@using ArmyStarter.Models;
@using ArmyStarter.Blazor.Provider
@inject HttpClient Http


<tr>
    <td>
        <input type="number" min="0" value="@AttackingModel.NumberOfModels" @onchange="@(newVal => {
                                                                              AttackingModel.NumberOfModels = int.Parse(newVal.Value.ToString());
                                                                              AttackingModelChanged.InvokeAsync(AttackingModel);
                                                                          })" />
    </td>
    <td>
        <input type="number" min="0" value="@AttackingModel.AttacksPerModel" @onchange="@(newVal => {
                                                                              AttackingModel.AttacksPerModel = int.Parse(newVal.Value.ToString());
                                                                              AttackingModelChanged.InvokeAsync(AttackingModel);
                                                                          })" />
    </td>

    <td>@AttackingModel.Attacks</td>
    <td>
        <input type="number" min="0" max="6" value="@AttackingModel.ToHit" @onchange="@(newVal => {
                                                                                        AttackingModel.ToHit= int.Parse(newVal.Value.ToString());
                                                                                        AttackingModelChanged.InvokeAsync(AttackingModel);
                                                                                    })" />
    </td>
    <td>
        <input type="number" min="0" max="30" value="@AttackingModel.Strength" @onchange="@(newVal => {
                                                                                        AttackingModel.Strength = int.Parse(newVal.Value.ToString());
                                                                                        AttackingModelChanged.InvokeAsync(AttackingModel);
                                                                                    })" />
    </td>
    <td>
        <input type="number" min="0" max="6" value="@AttackingModel.AP" @onchange="@(newVal => {
                                                                                        AttackingModel.AP = int.Parse(newVal.Value.ToString());
                                                                                        AttackingModelChanged.InvokeAsync(AttackingModel);
                                                                                    })" />
    </td>
    <td>
        <input type="number" min="0" max="6" value="@AttackingModel.Damage" @onchange="@(newVal => {
                                                                                        AttackingModel.Damage = int.Parse(newVal.Value.ToString());
                                                                                        AttackingModelChanged.InvokeAsync(AttackingModel);
                                                                                    })" />
    </td>
    <td><button onclick="@OnCopyButtonClicked">Copy</button></td>
</tr>


@code {
    [Parameter]
    AttackingModel AttackingModel { get; set; }

    [Parameter]
    EventCallback OnCopy { get; set; }

    [Parameter]
    private EventCallback<AttackingModel> AttackingModelChanged { get; set; }

    public void OnCopyButtonClicked(UIMouseEventArgs args)
    {
        OnCopy.InvokeAsync(null);
    }
}
